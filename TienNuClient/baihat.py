# Form implementation generated from reading ui file 'baihat.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
from PyQt6.QtGui import *
from PyQt6.QtCore import *
import pygame
from GetDataFromServer import GetDataFromServer
import base64


class baihat(QWidget):
    def __init__(self,id,TenBaiHat,TacGia,ThoiLuong,TenHinh,mp3,userID):
        super().__init__()
        self.ID=id
        self.TenBaiHat=TenBaiHat
        self.TacGia=TacGia
        self.ThoiLuong=ThoiLuong
        self.TenHinh=TenHinh
        self.mp3=mp3
        self.userID=userID
        self.like =False
        self.setUi()
    def setUi(self):
        self.resize(585, 94)
        self.frame = QtWidgets.QFrame(self)
        self.frame.setGeometry(QtCore.QRect(10, 10, 571, 80))
        self.frame.setStyleSheet("background-color: rgb(112, 66, 100);")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.lblHinh = QtWidgets.QLabel(parent=self.frame)
        self.lblHinh.setGeometry(QtCore.QRect(0, 10, 61, 61))
        self.lblHinh.setText("")
        
        self.lblHinh.setObjectName("lblHinh")
        self.lblTenBaiHat = QtWidgets.QLabel(parent=self.frame)
        self.lblTenBaiHat.setGeometry(QtCore.QRect(70, 20, 151, 16))
        self.lblTenBaiHat.setStyleSheet("color: rgb(255, 255, 255);")
        self.lblTenBaiHat.setObjectName("lblTenBaiHat")
        self.lblTacGia = QtWidgets.QLabel(parent=self.frame)
        self.lblTacGia.setGeometry(QtCore.QRect(70, 40, 111, 16))
        self.lblTacGia.setStyleSheet("color: rgb(255, 255, 255);")
        self.lblTacGia.setObjectName("lblTacGia")
        self.lblThoiLuong = QtWidgets.QLabel(parent=self.frame)
        self.lblThoiLuong.setGeometry(QtCore.QRect(200, 40, 81, 16))
        self.lblThoiLuong.setStyleSheet("color: rgb(255, 255, 255);")
        self.lblThoiLuong.setObjectName("lblThoiLuong")
        self.btnPlay = QtWidgets.QPushButton(parent=self.frame)
        self.btnPlay.setGeometry(QtCore.QRect(310, 10, 51, 61))
        self.btnPlay.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("imgs/icons8-play-button-circled-24.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btnPlay.setIcon(icon)
        self.btnPlay.setIconSize(QtCore.QSize(50, 50))
        self.btnPlay.setObjectName("btnPlay")
        self.btnPlay.clicked.connect(self.playSong)

        self.btnStop = QtWidgets.QPushButton(parent=self.frame)
        self.btnStop.setGeometry(QtCore.QRect(310, 10, 51, 61))
        self.btnStop.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("imgs/stop-button.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btnStop.setIcon(icon2)
        self.btnStop.setIconSize(QtCore.QSize(50, 50))
        self.btnStop.setObjectName("btnStop")
        self.btnStop.setVisible(False)
        self.btnStop.clicked.connect(self.stopPlaySong)
        
        self.btnPlayList = QtWidgets.QPushButton(parent=self.frame)
        self.btnPlayList.setGeometry(QtCore.QRect(390, 10, 51, 61))
        self.btnPlayList.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("imgs/icons8-playlist-30.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.btnPlayList.setIcon(icon1)
        self.btnPlayList.setIconSize(QtCore.QSize(50, 50))
        self.btnPlayList.setObjectName("btnPlayList")
        self.btnPlayList.clicked.connect(self.sendshowToPlaylist)
        self.btnLike = QtWidgets.QPushButton(parent=self.frame)
        self.btnLike.setGeometry(QtCore.QRect(460, 10, 51, 61))
        self.btnLike.setText("")
        client = GetDataFromServer()
        client.connect()
        lstMS = client.sendSignal("GET_FAVORITE_LIST_" + self.userID)
        for lst in lstMS:
            if int(self.ID) == lst["songID"]:
                self.like=True
        if self.like :
            icon2 = QtGui.QIcon()
            icon2.addPixmap(QtGui.QPixmap("imgs/heart.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            self.btnLike.setIcon(icon2)            
        else :         
            icon2 = QtGui.QIcon()
            icon2.addPixmap(QtGui.QPixmap("imgs/icons8-favorite-24 (1).png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            self.btnLike.setIcon(icon2)
        self.btnLike.clicked.connect(self.toggleFavorite)
        self.btnLike.setIconSize(QtCore.QSize(50, 50))
        self.btnLike.setObjectName("btnLike")
       
        self.retranslateUi()

    def retranslateUi(self):
        self.lblTenBaiHat.setText(str(self.TenBaiHat))
        self.lblTacGia.setText(str(self.TacGia))   
        self.lblThoiLuong.setText(str(self.ThoiLuong))
        self.lblHinh.setPixmap(self.bytes_to_pixmap(self.TenHinh))
        self.lblHinh.setScaledContents(True)
    def bytes_to_pixmap(self,img_byte64):
        decoded_bytes = base64.b64decode(img_byte64)
        """
    Chuyển đổi dữ liệu byte thành đối tượng QPixmap.
    
    :param image_bytes: Dữ liệu byte của hình ảnh
    :return: Đối tượng QPixmap
    """
        byte_array = QByteArray(decoded_bytes)
        pixmap = QPixmap()
        pixmap.loadFromData(byte_array)
        return pixmap
    def playSong(self):
        self.btnStop.setVisible(True)
        g = GetDataFromServer()
        g.connect()
        try:
    # # Load the song using pygame mixer
                g.playSongFromServer(self.ID)
        except Exception as e:
                QMessageBox.information(None, "Thông báo!", "Lỗi khi phát nhạc!")
                self.btnStop.setVisible(False)
    def stopPlaySong(self):
                self.btnStop.setVisible(False)
                pygame.mixer.music.stop()
                
    def sendAddToFavorite(self):
        client = GetDataFromServer()
        client.connect()
        receive = client.sendAddToPlaylist("ADD_TO_FAVORITE_" + self.userID + "_" + self.ID)
        print(receive)
    def sendshowToPlaylist(self):
        client = GetDataFromServer()
        client.connect()
        idPlaylist = client.sendSignal("GET_PLAYLIST_LIST_" +  self.userID)
        # for i in idPlaylist :     
        #     receive = client.sendAddToPlaylist("ADD_TO_PLAYLIST_" + str(i["id"]) + "_" + self.ID)
        # print(receive)
        # Hiển thị một hộp thoại thông báo
        msgBox = QMessageBox()
        msgBox.setWindowTitle("Thêm vào Danh sách phát")
        msgBox.setFixedSize(1000, 900)  # Thiết lập kích thước cố định cho hộp thoại là 800x400 pixels
        msgBox.setText("Thêm vào PlayList số : ")
        for i in idPlaylist:          
            ok_button = QPushButton(str(i['id']), self)
            msgBox.addButton(ok_button, QMessageBox.ButtonRole.AcceptRole)
            ok_button.clicked.connect(lambda _, id=i['id']: self.sendToPlaylist(id, msgBox))

        # Kết nối sự kiện nhấp vào nút OK với phương thức xử lý

        msgBox.exec()
    def sendToPlaylist(self,id:str,msgBox):
        client = GetDataFromServer()
        client.connect()
        
        receive = client.sendAddToPlaylist("ADD_TO_PLAYLIST_" + str(id) + "_" + self.ID)
        print(receive)
        msgBox.close()

    def sendRemoveToFavorite(self):
        client = GetDataFromServer()
        client.connect()
        receive = client.sendRemoveFavorite("REMOVE_TO_FAVORITE_" + self.userID + "_" + self.ID)
        print(receive)
    def toggleFavorite(self):
        # Kiểm tra trạng thái hiện tại của nút yêu thích
        if self.like:
            # Nếu đã thích, gửi yêu cầu xóa khỏi danh sách yêu thích
            self.sendRemoveToFavorite()
            # Đổi trạng thái yêu thích về False
            self.like = False
            # Thay đổi biểu tượng của nút yêu thích
            icon2 = QtGui.QIcon()
            icon2.addPixmap(QtGui.QPixmap("imgs/icons8-favorite-24 (1).png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            self.btnLike.setIcon(icon2)
        else:
            # Nếu chưa thích, gửi yêu cầu thêm vào danh sách yêu thích
            self.sendAddToFavorite()
            # Đổi trạng thái yêu thích về True
            self.like = True
            # Thay đổi biểu tượng của nút yêu thích
            icon2 = QtGui.QIcon()
            icon2.addPixmap(QtGui.QPixmap("imgs/heart.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            self.btnLike.setIcon(icon2)       

if __name__ == "__main__":
    bh=baihat()

